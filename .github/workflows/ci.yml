name: Java CI

on:
  push:
    branches: ["**"]
    tags: ["*"]
  pull_request:
    branches: ["**"]

env:
  IMAGE_TAG: ghcr.io/${{ github.repository }}:${{ github.sha }}
  THRESHOLD: 90.0

jobs:
  DockerBuild:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Setting Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: ./backend/soat
          push: true
          no-cache: true
          target: builder
          tags: ${{ env.IMAGE_TAG }}

  UnitTest:
    runs-on: ubuntu-latest
    needs: DockerBuild
    steps:
      - name: Login GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull Image Docker
        run: docker pull ${{ env.IMAGE_TAG }}

      - name: test
        run: docker run --privileged -v ${{ github.workspace }}/coverage:/app/target/site/jacoco/ --rm ${{ env.IMAGE_TAG }} sh -c "dockerd & sleep 5 && mvn clean compile test"

      - name: Show JaCoCo Coverage
        run: |
          sudo apt install -y libxml2-utils -qq
          JACOCO_XML=${{ github.workspace }}"/coverage/jacoco.xml"
          if [ -f "$JACOCO_XML" ]; then
            MISSED=$(xmllint --xpath "string(//report/counter[@type='LINE']/@missed)" "$JACOCO_XML")
            COVERED=$(xmllint --xpath "string(//report/counter[@type='LINE']/@covered)" "$JACOCO_XML")
            TOTAL=$((MISSED + COVERED))
            PERCENT=$(awk "BEGIN { printf \"%.2f\", ($COVERED / $TOTAL) * 100 }")
            echo "✅ Cobertura de código (linhas): $PERCENT% ($COVERED / $TOTAL)"

            below_threshold=$(awk "BEGIN {print ($PERCENT < $THRESHOLD)}")

            if [[ $below_threshold -eq 1 ]]; then
              echo "❌ Coverage below the required minimum of $THRESHOLD%. Pipeline failed."
              exit 1
            else
              echo "✔️ Satisfactory coverage."
              exit 0
            fi
          else
            echo "File not found $JACOCO_XML"
          fi

  PMDCheck:
    runs-on: ubuntu-latest
    needs: DockerBuild
    steps:
      - name: Login GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull Image Docker
        run: docker pull ${{ env.IMAGE_TAG }}

      - name: PMDCheck
        run: docker run --rm -v ${{ github.workspace }}/coverage:/app/target/site/jacoco/ ${{ env.IMAGE_TAG }} mvn pmd:check -X

  Package:
    runs-on: ubuntu-latest
    needs: UnitTest
    steps:
      - name: Login GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull Image Docker
        run: docker pull ${{ env.IMAGE_TAG }}

      - name: Package
        run: docker run --rm ${{ env.IMAGE_TAG }} mvn clean package -DskipTests --batch-mode
