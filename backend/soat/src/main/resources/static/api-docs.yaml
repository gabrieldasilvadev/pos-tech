openapi: 3.0.3
x-stoplight:
  id: xxzpv5uwl9o9v
info:
  version: '1.0'
  title: PosTech - SOAT
  description: API para gerenciamento de clientes e pedidos no contexto da disciplina de Soluções de Arquitetura de Software.
  contact:
    email: hahmann96@gmail.com
    name: Philipp Hahmann
    url: 'https://github.com/philipphahmann'
  license:
    url: 'https://opensource.org/licenses/MIT'
    name: MIT License
servers:
  - url: 'http://localhost:8080'
    description: Localhost
paths:
  /customers:
    get:
      tags:
        - Customer
      summary: Buscar clientes (todos ou por CPF)
      description: Busca todos os clientes cadastrados ou realiza filtro por CPF
      operationId: getClients
      parameters:
        - $ref: '#/components/parameters/CpfParam'
      responses:
        '200':
          description: Cliente(s) encontrado(s)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
              examples:
                ExemploClientePorCPF:
                  value:
                    - id: 01fc4570-8b23-11ed-a1eb-0242ac120002
                      cpf: '12345678900'
                      name: Maria Oliveira
                      email: maria@example.com
                ExemploListaClientes:
                  value:
                    - id: 01fc4570-8b23-11ed-a1eb-0242ac120002
                      cpf: '12345678900'
                      name: Maria Oliveira
                      email: maria@example.com
                    - id: 01fc4570-8b23-11ed-a1eb-0242ac120003
                      cpf: '12345678901'
                      name: Joe Doe
                      email: joe@doe.com
        '204':
          description: Nenhum cliente retornado
        '400':
          description: Requisição inválida. Verique os dados enviados.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erro interno no servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      servers:
        - url: 'http://localhost:8080'
          description: Localhost
      x-stoplight:
        id: ccjlr75qr13cq
    post:
      tags:
        - Customer
      summary: Criar cliente
      description: Cria um cliente
      operationId: postClients
      requestBody:
        $ref: '#/components/requestBodies/ClientRequest'
      responses:
        '201':
          description: Cliente cadastrado com sucesso
        '400':
          description: Requisição inválida. Verifique os dados enviados.
        '409':
          description: Duplicidade
        '500':
          description: Erro interno no servidor
      servers:
        - url: 'http://localhost:8080'
          description: Localhost
      x-stoplight:
        id: p7id4z4j5ye8j
  /products:
    get:
      tags:
        - Product
      summary: 'Buscar produtos (todos, por ID ou por categoria)'
      description: Retorna todos os produtos cadastrados ou realiza filtros por ID ou categoria
      operationId: getProduct
      parameters:
        - $ref: '#/components/parameters/ProductIdParam'
        - $ref: '#/components/parameters/CategoryParam'
      responses:
        '200':
          description: OK
        '204':
          description: Nenhum produto encontrado
        '400':
          description: Requisição inválida
        '500':
          description: Erro interno ao buscar produtos
      servers:
        - url: 'http://localhost:8080'
          description: Localhost
      x-stoplight:
        id: 6xy270zvtp90v
    post:
      tags:
        - Product
      summary: Criar produto
      description: 'Cria um novo produto no catálogo, exigindo dados como nome, SKU, preço e categoria.'
      operationId: post-Produto
      requestBody:
        $ref: '#/components/requestBodies/ProductCreateRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  message:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
      servers:
        - url: 'http://localhost:8080'
          description: Localhost
      x-stoplight:
        id: oqx8ph4u9d8yi
    put:
      tags:
        - Product
      summary: Atualizar produto
      description: Atualiza um produto existente com base no identificador e nos novos dados enviados.
      operationId: put-Produto
      requestBody:
        $ref: '#/components/requestBodies/ProductUpdateRequest'
      responses:
        '200':
          description: Produto atualizado com sucesso.
        '400':
          description: Dados inválidos. Verifique os campos obrigatórios e o formato enviado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Recurso não encontrado. Verifique o identificador ou o endpoint.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erro interno no servidor. Tente novamente mais tarde ou contate o suporte.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      servers:
        - url: 'http://localhost:8080'
          description: Localhost
      x-stoplight:
        id: apvbapxro0wtz
  '/products/{productId}':
    delete:
      tags:
        - Product
      summary: Inativar produto
      operationId: delete-products-productId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      servers:
        - url: 'http://localhost:8080'
          description: Localhost
      x-stoplight:
        id: cody3klc1zb7p
  /orders:
    get:
      tags:
        - Order
      summary: Buscar pedido
      operationId: get-orders
      responses:
        '200':
          $ref: '#/components/responses/OrderCreatedResponse'
      servers:
        - url: 'http://localhost:8080'
          description: Localhost
      x-stoplight:
        id: htirceird8ayu
    post:
      tags:
        - Order
      summary: Criar pedido
      operationId: post-orders
      requestBody:
        $ref: '#/components/requestBodies/CreateOrderRequest'
      responses:
        '201':
          $ref: '#/components/responses/OrderCreatedResponse'
      servers:
        - url: 'http://localhost:8080'
          description: Localhost
      x-stoplight:
        id: xzapur9q63zqo
      description: |-
        Endpoint responsável por registrar um novo pedido realizado no totem.
        Recebe uma lista de itens escolhidos pelo cliente, aplica validações de disponibilidade, calcula o subtotal, aplica descontos válidos.
        Retorna o resumo completo do pedido contendo os itens, valores parciais, descontos aplicados e o valor total a ser pago.
        O pedido permanece em estado pendente de pagamento até a confirmação via meio de pagamento associado.
tags:
  - name: Customer
    description: Operações relacionadas a clientes
  - name: Product
    description: Operações relacionadas a produtos
  - name: Order
    description: Operações relacionadas aos pedidos
components:
  parameters:
    CpfParam:
      name: cpf
      in: query
      description: CPF do cliente no formato apenas números
      schema:
        type: string
        pattern: '^\d{11}$'
    CategoryParam:
      name: category
      in: query
      description: Enum da categoria
      required: false
      schema:
        type: string
    ProductIdParam:
      name: ProductIdParam
      in: query
      description: Id do produto
      required: false
      schema:
        type: string
  requestBodies:
    ClientRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              cpf:
                type: string
                minLength: 11
                maxLength: 11
                example: '12345678901'
              name:
                type: string
              email:
                type: string
                format: email
            required:
              - cpf
              - name
              - email
    ProductCreateRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              sku:
                type: string
              name:
                type: string
              price:
                type: number
              description:
                type: string
              image:
                type: string
              category:
                $ref: '#/components/schemas/Category'
            required:
              - sku
              - name
              - price
              - description
              - image
              - category
    ProductUpdateRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              price:
                type: number
              description:
                type: string
              image:
                type: string
              category:
                $ref: '#/components/schemas/Category'
    CreateOrderRequest:
      content:
        application/json:
          schema:
            type: object
            required:
              - CustomerId
              - items
            properties:
              CustomerId:
                $ref: '#/components/schemas/UUID'
              items:
                type: array
                x-stoplight:
                  id: iklu2djyzoe0j
                minItems: 1
                maxItems: 100
                items:
                  $ref: '#/components/schemas/OrderItem'
              discounts:
                type: array
                x-stoplight:
                  id: whbkbfnehhbh7
                items:
                  $ref: '#/components/schemas/UUID'
                readOnly: true
              notes:
                type: array
                x-stoplight:
                  id: syc04c2zn0hua
                items:
                  x-stoplight:
                    id: 9lxcomfd87ypj
                  type: string
                  example: Remover a salada
                  readOnly: true
          examples:
            Example 1:
              value:
                CustomerId: 241fae7b-0210-4d29-a928-90653c9a9a89
                items:
                  - name: string
                    quantity: 2
                    price: '1946.32'
                    category: SNACK
                    discount: 12.5
                discounts:
                  - 241fae7b-0210-4d29-a928-90653c9a9a89
                notes:
                  - Remover a salada
      description: 'Requisição para criação de um novo pedido contendo cliente, lista de itens e observações opcionais.'
  schemas:
    Customer:
      type: object
      title: Client
      description: Modelo de cliente no banco de dados
      properties:
        id:
          type: string
          format: uuid
        cpf:
          type: string
          pattern: '^\d{11}$'
          minLength: 11
          maxLength: 11
          example: '12345678901'
        name:
          type: string
        email:
          type: string
          format: email
      required:
        - id
        - cpf
        - name
        - email
      example:
        id: 123e4567-e89b-12d3-a456-426614174000
        cpf: '12345678901'
        name: John Doe
        email: john@doe.com
      x-stoplight:
        id: 7zmeu59v72xzm
    ErrorResponse:
      type: object
      title: ErrorResponse
      description: Response de erro
      properties:
        status:
          type: integer
        message:
          type: string
        error:
          type: array
          items:
            type: string
      example:
        status: 400
        message: Requisição inválida
        error:
          - Campo obrigatório 'email' não informado
      x-stoplight:
        id: fl28edeczujwn
    Category:
      type: string
      enum:
        - SNACK
        - DRINK
        - DESSERT
        - SIDE_DISH
      title: Category
      description: Categoria do produto dentro do pedido.
      x-stoplight:
        id: 2ak8h1mepj3oc
    OrderItem:
      title: OrderItem
      x-stoplight:
        id: u1kemoeyn6wo1
      type: object
      description: 'Item individual de um pedido, contendo informações do produto e quantidade solicitada.'
      properties:
        name:
          type: string
          x-stoplight:
            id: n1bit9j1z59cw
        quantity:
          type: integer
          x-stoplight:
            id: suq9qpzfyzmhf
          example: 2
          minimum: 1
          maximum: 100
          format: int32
          readOnly: true
        price:
          $ref: '#/components/schemas/Money'
        category:
          $ref: '#/components/schemas/Category'
        discount:
          $ref: '#/components/schemas/Discount'
      required:
        - name
        - quantity
        - price
        - category
    UUID:
      title: UUID
      x-stoplight:
        id: xw2w2vxnuxc7b
      type: string
      format: uuid
      minLength: 36
      maxLength: 36
      pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
      example: 241fae7b-0210-4d29-a928-90653c9a9a89
      description: Identificador único universal no formato UUID.
    Money:
      title: Money
      x-stoplight:
        id: bnsq3cx9srure
      example: '1946.32'
      type: string
      pattern: '(?:R\$\s?)?(?:\d{1,3}(?:\.\d{3})*|\d+)(?:,\d{2})?'
      minLength: 1
      maxLength: 1000000000000
      readOnly: true
      description: 'Valor monetário representado em formato brasileiro (R$), com suporte a casas decimais.'
    Discount:
      $ref: '#/components/schemas/Percentage'
      description: 'Valor do desconto aplicado ao item, representado como valor monetário. Pode ser utilizado para promoções, cupons ou políticas comerciais. Caso não informado, assume-se que o item não possui desconto.'
      x-stoplight:
        id: 7pwor7z2bvg0o
    Percentage:
      title: Percentage
      x-stoplight:
        id: 82j02v703ci7l
      type: number
      description: 'Valor percentual entre 0 e 100, podendo conter casas decimais. Utilizado para representar taxas, descontos percentuais e proporções.'
      format: double
      example: 12.5
      minimum: 0
      maximum: 100
      readOnly: true
    DiscountType:
      title: DiscountType
      x-stoplight:
        id: uja9zlpvfy1b7
      enum:
        - PERCENTAGE
        - FIXED
      readOnly: true
    OrderStatus:
      title: OrderStatus
      x-stoplight:
        id: heaypai4fcsg8
      enum:
        - RECEIVED
        - AWAITING_PAYMENT
        - PAID
        - IN_PREPARATION
        - DONE
        - DELIVERED
      readOnly: true
  responses:
    OrderCreatedResponse:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            required:
              - OrderId
              - items
              - discounts
              - discountAmountTotal
              - subtotal
              - total
              - status
            properties:
              OrderId:
                $ref: '#/components/schemas/UUID'
              items:
                type: array
                x-stoplight:
                  id: r462ax07rmgtr
                items:
                  $ref: '#/components/schemas/OrderItem'
                readOnly: true
              discounts:
                type: array
                x-stoplight:
                  id: afvh9bb39lkvy
                items:
                  x-stoplight:
                    id: 4a172qk753nn1
                  type: object
                  required:
                    - discountId
                    - type
                  properties:
                    discountId:
                      $ref: '#/components/schemas/UUID'
                    type:
                      $ref: '#/components/schemas/DiscountType'
                    value:
                      x-stoplight:
                        id: a7a2thbfdnjf3
                      anyOf:
                        - $ref: '#/components/schemas/Money'
                        - $ref: '#/components/schemas/Percentage'
                    amount:
                      $ref: '#/components/schemas/Money'
                    reason:
                      type: string
                      x-stoplight:
                        id: cdyex9k4dxmio
                readOnly: true
              discountAmountTotal:
                $ref: '#/components/schemas/Money'
              subtotal:
                $ref: '#/components/schemas/Money'
              total:
                $ref: '#/components/schemas/Money'
              status:
                $ref: '#/components/schemas/OrderStatus'
          examples:
            Example 1:
              value:
                OrderId: 241fae7b-0210-4d29-a928-90653c9a9a89
                items:
                  - name: string
                    quantity: 2
                    price: '1946.32'
                    category: SNACK
                    discount: 12.5
                discounts:
                  - discountId: 241fae7b-0210-4d29-a928-90653c9a9a89
                    type: PERCENTAGE
                    value: '1946.32'
                    amount: '1946.32'
                    reason: string
                discountAmountTotal: '1946.32'
                subtotal: '1946.32'
                total: '1946.32'
                status: RECEIVED
