{
	"info": {
		"_postman_id": "06e56eb0-512b-434b-b64b-5303a704bad5",
		"name": "Sistema SOAT - Lanchonete",
		"description": "API do Sistema de Autoatendimento da Lanchonete SOAT\n\nSistema completo para gest√£o de pedidos, clientes, produtos e pagamentos de uma lanchonete.\n\nüîÑ **Fluxo Recomendado para Testes (conforme README.md):**\n\n**1. Gest√£o do Card√°pio (Gerente):**\n- POST /products - Cadastrar novos produtos\n- PUT /products/{id} - Atualizar pre√ßos e informa√ß√µes\n- GET /products - Verificar o card√°pio\n- DELETE /products/{id} - Inativar produtos\n\n**2. Jornada do Cliente:**\n- POST /customers - Cadastrar novo cliente\n- GET /customers?cpf={cpf} - Verificar cadastro\n- POST /orders - Fazer pedido\n\n**3. Fluxo de Pagamento:**\n- POST /payments - Iniciar pagamento\n- GET /payments/{id}/status - Verificar aprova√ß√£o\n- GET /payments/{id} - Detalhes da transa√ß√£o\n\n**4. Opera√ß√£o da Cozinha:**\n- GET /orders - Acompanhar fila de pedidos\n\nCategorias de produtos:\n- SNACK (Lanches) | DRINK (Bebidas) | DESSERT (Sobremesas) | SIDE_DISH (Acompanhamentos)\n\nStatus de pedidos:\n- RECEIVED ‚Üí IN_PREPARATION ‚Üí DONE ‚Üí DELIVERED\n\nStatus de pagamentos:\n- PENDING ‚Üí APPROVED/DECLINED/FAILED",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2833044"
	},
	"item": [
		{
			"name": "1Ô∏è‚É£ Gest√£o do Card√°pio",
			"item": [
				{
					"name": "Criar um novo produto",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"sku\": \"BURGUER-003\",\n  \"name\": \"X-Salada Fit\",\n  \"price\": 22.90,\n  \"description\": \"Hamb√∫rguer de frango grelhado com salada fresca, tomate e molho light\",\n  \"image\": \"https://exemplo.com/images/x-salada-fit.jpg\",\n  \"category\": \"SNACK\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/products",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"products"
							]
						},
						"description": "**PASSO 1 - Cadastrando um Novo Lanche**\n\nO gerente adiciona um novo hamb√∫rguer ao sistema para come√ßar a preparar o card√°pio.\n\n**Campos obrigat√≥rios:**\n- sku: C√≥digo √∫nico do produto\n- name: Nome do produto\n- price: Pre√ßo em reais (formato decimal)\n- description: Descri√ß√£o detalhada\n- image: URL da imagem do produto\n- category: SNACK, DRINK, DESSERT ou SIDE_DISH"
					},
					"response": [
						{
							"name": "Produto criado com sucesso",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sku\": \"BURGUER-003\",\n  \"name\": \"X-Salada Fit\",\n  \"price\": 22.90,\n  \"description\": \"Hamb√∫rguer de frango grelhado com salada fresca, tomate e molho light\",\n  \"image\": \"https://exemplo.com/images/x-salada-fit.jpg\",\n  \"category\": \"SNACK\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/products",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"products"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"456e7890-f12a-34b5-c678-901234567890\"\n}"
						},
						{
							"name": "Dados inv√°lidos - campos obrigat√≥rios faltando",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Produto sem SKU\",\n  \"price\": -10.00\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/products",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"products"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": 400,\n  \"message\": \"Bad request\",\n  \"error\": [\n    \"O valor do produto n√£o pode ser nulo\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Atualizar um produto",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"X-Burger Cl√°ssico Premium\",\n  \"price\": 27.90,\n  \"description\": \"Hamb√∫rguer artesanal com carne bovina angus, queijo su√≠√ßo, alface americana, tomate org√¢nico e molho especial da casa\",\n  \"image\": \"https://exemplo.com/images/x-burger-classico-premium.jpg\",\n  \"category\": \"SNACK\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/products/:productId",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"products",
								":productId"
							],
							"variable": [
								{
									"key": "productId",
									"value": "59b25958-aaa8-65ec-4035-f4cbc3faaf17",
									"description": "ID √∫nico do produto no formato UUID"
								}
							]
						},
						"description": "**PASSO 2 - Ajustando o Pre√ßo**\n\nAp√≥s o cadastro, o gerente percebe que o pre√ßo est√° incorreto e usa este endpoint para ajust√°-lo.\n\n**Campos atualiz√°veis:**\n- name: Nome do produto\n- price: Pre√ßo em reais\n- description: Descri√ß√£o\n- image: URL da imagem\n- category: Categoria do produto\n\n**Nota:** O SKU n√£o pode ser alterado ap√≥s a cria√ß√£o."
					},
					"response": [
						{
							"name": "Produto atualizado com sucesso",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"X-Burger Cl√°ssico Premium\",\n  \"price\": 27.90,\n  \"description\": \"Hamb√∫rguer artesanal com carne bovina angus, queijo su√≠√ßo, alface americana, tomate org√¢nico e molho especial da casa\",\n  \"image\": \"https://exemplo.com/images/x-burger-classico-premium.jpg\",\n  \"category\": \"SNACK\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/products/59b25958-aaa8-65ec-4035-f4cbc3faaf17",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"products",
										"59b25958-aaa8-65ec-4035-f4cbc3faaf17"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"59b25958-aaa8-65ec-4035-f4cbc3faaf17\",\n  \"sku\": \"BURGUER-001\",\n  \"active\": true,\n  \"name\": \"X-Burger Cl√°ssico Premium\",\n  \"price\": 27.90,\n  \"description\": \"Hamb√∫rguer artesanal com carne bovina angus, queijo su√≠√ßo, alface americana, tomate org√¢nico e molho especial da casa\",\n  \"image\": \"https://exemplo.com/images/x-burger-classico-premium.jpg\",\n  \"category\": \"SNACK\"\n}"
						},
						{
							"name": "Produto n√£o encontrado",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"X-Burger Cl√°ssico Premium\",\n  \"price\": 27.90,\n  \"description\": \"Hamb√∫rguer artesanal com carne bovina angus, queijo su√≠√ßo, alface americana, tomate org√¢nico e molho especial da casa\",\n  \"image\": \"https://exemplo.com/images/x-burger-classico-premium.jpg\",\n  \"category\": \"SNACK\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/products/99999999-9999-9999-9999-999999999999",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"products",
										"99999999-9999-9999-9999-999999999999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": 404,\n  \"message\": \"Entity not found\",\n  \"error\": [\n    \"Product not found with ID: 99999999-9999-9999-9999-999999999999\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Buscar produtos",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:8080/products?category=SNACK",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"products"
							],
							"query": [
								{
									"key": "SKU",
									"value": "BURGUER-001",
									"description": "SKU espec√≠fico do produto para busca individual",
									"disabled": true
								},
								{
									"key": "category",
									"value": "SNACK",
									"description": "Categoria para filtrar produtos"
								}
							]
						},
						"description": "**PASSO 3 - Verificando o Card√°pio**\n\nPara garantir que todos os produtos de uma categoria est√£o corretos, o gerente lista todos os itens da categoria \"Lanche\".\n\n- Se nenhum par√¢metro for fornecido, retorna todos os produtos ativos\n- √â poss√≠vel filtrar por `category` para obter produtos de uma categoria espec√≠fica\n- √â poss√≠vel buscar por `SKU` espec√≠fico\n\n**Categorias dispon√≠veis:**\n- SNACK (Lanches) | DRINK (Bebidas) | DESSERT (Sobremesas) | SIDE_DISH (Acompanhamentos)"
					},
					"response": [
						{
							"name": "Lista de produtos encontrados",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:8080/products?category=SNACK",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"products"
									],
									"query": [
										{
											"key": "category",
											"value": "SNACK",
											"description": "Categoria para filtrar produtos"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"59b25958-aaa8-65ec-4035-f4cbc3faaf17\",\n    \"sku\": \"BURGUER-001\",\n    \"name\": \"X-Burger Cl√°ssico\",\n    \"description\": \"Hamb√∫rguer artesanal com carne bovina, queijo, alface, tomate e molho especial\",\n    \"price\": 25.90,\n    \"active\": true,\n    \"image\": \"https://exemplo.com/images/x-burger-classico.jpg\",\n    \"category\": \"SNACK\"\n  },\n  {\n    \"id\": \"e1f3b7df-b19c-62da-47a2-e29c02bc89b8\",\n    \"sku\": \"BURGUER-002\",\n    \"name\": \"X-Bacon Especial\",\n    \"description\": \"Hamb√∫rguer com carne bovina, bacon crocante, queijo cheddar e molho barbecue\",\n    \"price\": 29.90,\n    \"active\": true,\n    \"image\": \"https://exemplo.com/images/x-bacon-especial.jpg\",\n    \"category\": \"SNACK\"\n  }\n]"
						}
					]
				},
				{
					"name": "Inativar um produto",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/products/:productId",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"products",
								":productId"
							],
							"variable": [
								{
									"key": "productId",
									"value": "59b25958-aaa8-65ec-4035-f4cbc3faaf17",
									"description": "ID √∫nico do produto no formato UUID"
								}
							]
						},
						"description": "**PASSO 4 - Removendo um Item**\n\nUm item promocional saiu do card√°pio e precisa ser inativado. O gerente o remove para que n√£o apare√ßa mais para os clientes.\n\nRealiza a inativa√ß√£o de um produto, tornando-o indispon√≠vel para novos pedidos. A opera√ß√£o √© l√≥gica e n√£o remove o registro do banco de dados."
					},
					"response": [
						{
							"name": "Produto inativado com sucesso",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/products/59b25958-aaa8-65ec-4035-f4cbc3faaf17",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"products",
										"59b25958-aaa8-65ec-4035-f4cbc3faaf17"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Produto n√£o encontrado",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/products/99999999-9999-9999-9999-999999999999",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"products",
										"99999999-9999-9999-9999-999999999999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": 404,\n  \"message\": \"Entity not found\",\n  \"error\": [\n    \"Product not found with ID: 99999999-9999-9999-9999-999999999999\"\n  ]\n}"
						}
					]
				}
			],
			"description": "**GEST√ÉO DO CARD√ÅPIO (Ator: Gerente da Lanchonete)**\n\nAntes de qualquer venda, o gerente precisa preparar o card√°pio, garantindo que os produtos estejam dispon√≠veis, com pre√ßos corretos e atualizados.\n\nPermite cadastrar, atualizar, listar e inativar produtos do cat√°logo por categoria."
		},
		{
			"name": "2Ô∏è‚É£ Jornada do Cliente",
			"item": [
				{
					"name": "Criar um novo cliente",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cpf\": \"53731833697\",\n  \"name\": \"Maria Silva Santos\",\n  \"email\": \"maria.silva@email.com\",\n  \"phone\": \"11987654321\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/customers",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"customers"
							]
						},
						"description": "**PASSO 5 - Cliente Novo na √Årea**\n\nUm novo cliente se cadastra no sistema para agilizar futuros pedidos.\n\nRegistra um novo cliente no sistema. O CPF √© usado como um identificador √∫nico.\n\n**Campos obrigat√≥rios:**\n- cpf: 11 d√≠gitos apenas n√∫meros\n- name: Entre 3 e 255 caracteres\n- email: Formato de email v√°lido\n\n**Campos opcionais:**\n- phone: Telefone no formato brasileiro (10 ou 11 d√≠gitos)"
					},
					"response": [
						{
							"name": "Cliente criado com sucesso",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"cpf\": \"53731833697\",\n  \"name\": \"Maria Silva Santos\",\n  \"email\": \"maria.silva@email.com\",\n  \"phone\": \"11987654321\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/customers",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"customers"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\n  \"name\": \"Maria Silva Santos\",\n  \"email\": \"maria.silva@email.com\",\n  \"cpf\": \"53731833697\",\n  \"phone\": \"11987654321\"\n}"
						},
						{
							"name": "Cliente j√° cadastrado com o CPF informado",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"cpf\": \"53731833697\",\n  \"name\": \"Maria Silva Santos\",\n  \"email\": \"maria.silva@email.com\",\n  \"phone\": \"11987654321\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/customers",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"customers"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": 409,\n  \"message\": \"Resource conflict\",\n  \"error\": [\n    \"Customer registration failed due to business rule violation\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Buscar cliente por CPF",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:8080/customers?cpf=53731833697",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"customers"
							],
							"query": [
								{
									"key": "cpf",
									"value": "53731833697",
									"description": "CPF do cliente no formato apenas n√∫meros (11 d√≠gitos)"
								}
							]
						},
						"description": "**PASSO 6 - Verificando o Cadastro**\n\nO cliente (ou o sistema) pode usar o CPF para consultar os dados e confirmar que o cadastro foi bem-sucedido.\n\nLocaliza e retorna os dados de um cliente espec√≠fico com base no CPF fornecido. O CPF deve ser informado como um par√¢metro de consulta e conter apenas os 11 d√≠gitos.\n\n**Exemplo de uso:**\n- CPF v√°lido: 53731833697\n- CPF inv√°lido: 12345 (menos de 11 d√≠gitos)"
					},
					"response": [
						{
							"name": "Cliente encontrado com sucesso",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:8080/customers?cpf=53731833697",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"customers"
									],
									"query": [
										{
											"key": "cpf",
											"value": "53731833697",
											"description": "CPF do cliente no formato apenas n√∫meros"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\n  \"name\": \"Maria Silva Santos\",\n  \"email\": \"maria.silva@email.com\",\n  \"cpf\": \"53731833697\",\n  \"phone\": \"11987654321\"\n}"
						},
						{
							"name": "Cliente n√£o encontrado para o CPF informado",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:8080/customers?cpf=99999999999",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"customers"
									],
									"query": [
										{
											"key": "cpf",
											"value": "99999999999",
											"description": "CPF do cliente no formato apenas n√∫meros"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": 404,\n  \"message\": \"Entity not found\",\n  \"error\": [\n    \"Customer not found for the document identifier: 99999999999\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Criar um novo pedido",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"CustomerId\": \"123e4567-e89b-12d3-a456-426614174000\",\n  \"items\": [\n    {\n      \"productId\": \"59b25958-aaa8-65ec-4035-f4cbc3faaf17\",\n      \"name\": \"X-Burger Cl√°ssico\",\n      \"quantity\": 2,\n      \"price\": 25.90,\n      \"category\": \"SNACK\",\n      \"discount\": {\n        \"value\": 0.00\n      }\n    },\n    {\n      \"productId\": \"e1f3b7df-b19c-62da-47a2-e29c02bc89b8\",\n      \"name\": \"Coca-Cola 350ml\",\n      \"quantity\": 2,\n      \"price\": 5.50,\n      \"category\": \"DRINK\",\n      \"discount\": {\n        \"value\": 0.00\n      }\n    }\n  ],\n  \"discounts\": [\n    {\n      \"value\": 5.00\n    }\n  ],\n  \"notes\": [\n    \"Sem cebola no hamb√∫rguer\",\n    \"Coca-Cola bem gelada\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/orders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"orders"
							]
						},
						"description": "**PASSO 7 - Fazendo o Pedido**\n\nO cliente escolhe seus itens (o lanche cadastrado anteriormente e uma bebida) e cria um novo pedido.\n\nRegistra um novo pedido no sistema.\n\n**Dados necess√°rios:**\n- `CustomerId`: O ID do cliente que est√° realizando o pedido (formato UUID)\n- `items`: Uma lista de produtos que comp√µem o pedido. Para cada item:\n  - `productId`: ID do produto (formato UUID)\n  - `name`: Nome do produto\n  - `quantity`: Quantidade desejada (m√≠nimo 1)\n  - `price`: Pre√ßo unit√°rio\n  - `category`: Categoria do produto\n  - `discount`: Desconto aplicado ao item (opcional)\n\n**Comportamento:**\n- O sistema calcula o subtotal e o total do pedido\n- O status inicial do pedido √© definido como `RECEIVED`\n- Descontos e observa√ß√µes s√£o opcionais"
					},
					"response": [
						{
							"name": "Pedido criado com sucesso",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"CustomerId\": \"123e4567-e89b-12d3-a456-426614174000\",\n  \"items\": [\n    {\n      \"productId\": \"59b25958-aaa8-65ec-4035-f4cbc3faaf17\",\n      \"name\": \"X-Burger Cl√°ssico\",\n      \"quantity\": 2,\n      \"price\": 25.90,\n      \"category\": \"SNACK\",\n      \"discount\": {\n        \"value\": 0.00\n      }\n    },\n    {\n      \"productId\": \"e1f3b7df-b19c-62da-47a2-e29c02bc89b8\",\n      \"name\": \"Coca-Cola 350ml\",\n      \"quantity\": 2,\n      \"price\": 5.50,\n      \"category\": \"DRINK\",\n      \"discount\": {\n        \"value\": 0.00\n      }\n    }\n  ],\n  \"discounts\": [\n    {\n      \"value\": 5.00\n    }\n  ],\n  \"notes\": [\n    \"Sem cebola no hamb√∫rguer\",\n    \"Coca-Cola bem gelada\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/orders",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"orders"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"OrderId\": \"f5c245ab-4664-d67d-74d7-225526e5fa4f\",\n  \"items\": [\n    {\n      \"productId\": \"59b25958-aaa8-65ec-4035-f4cbc3faaf17\",\n      \"name\": \"X-Burger Cl√°ssico\",\n      \"quantity\": 2,\n      \"price\": 25.90,\n      \"category\": \"SNACK\",\n      \"discount\": {\n        \"value\": 0.00\n      }\n    },\n    {\n      \"productId\": \"e1f3b7df-b19c-62da-47a2-e29c02bc89b8\",\n      \"name\": \"Coca-Cola 350ml\",\n      \"quantity\": 2,\n      \"price\": 5.50,\n      \"category\": \"DRINK\",\n      \"discount\": {\n        \"value\": 0.00\n      }\n    }\n  ],\n  \"discountAmountTotal\": 5.00,\n  \"subtotal\": 62.80,\n  \"total\": 57.80,\n  \"status\": \"RECEIVED\",\n  \"discounts\": [\n    {\n      \"type\": \"FIXED\",\n      \"amount\": 5.00,\n      \"reason\": \"Desconto promocional\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"description": "**JORNADA DO CLIENTE**\n\nCom o card√°pio pronto, um cliente chega √† lanchonete para fazer um pedido.\n\nGerenciamento do relacionamento com clientes e cria√ß√£o de pedidos."
		},
		{
			"name": "3Ô∏è‚É£ Fluxo de Pagamento",
			"item": [
				{
					"name": "Iniciar processo de pagamento",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerId\": \"123e4567-e89b-12d3-a456-426614174000\",\n  \"orderId\": \"f5c245ab-4664-d67d-74d7-225526e5fa4f\",\n  \"amount\": 57.80,\n  \"paymentMethod\": \"PIX\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/payments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"payments"
							]
						},
						"description": "**PASSO 8 - Iniciando o Pagamento**\n\nCom o pedido criado, o pr√≥ximo passo √© o pagamento. Este endpoint inicia a transa√ß√£o de forma ass√≠ncrona.\n\nInicia o processo de pagamento para um pedido espec√≠fico. A API recebe a solicita√ß√£o e retorna imediatamente um `paymentId`, que ser√° usado para consultar o status da transa√ß√£o. O processamento do pagamento ocorre de forma ass√≠ncrona.\n\n**Dados necess√°rios:**\n- `customerId`: ID do cliente (formato UUID)\n- `orderId`: ID do pedido (formato UUID)\n- `amount`: Valor total a ser pago\n- `paymentMethod`: M√©todo de pagamento (ex: PIX, CREDIT_CARD, etc.)"
					},
					"response": [
						{
							"name": "Pagamento iniciado com sucesso",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customerId\": \"123e4567-e89b-12d3-a456-426614174000\",\n  \"orderId\": \"f5c245ab-4664-d67d-74d7-225526e5fa4f\",\n  \"amount\": 57.80,\n  \"paymentMethod\": \"PIX\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/payments",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"payments"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"paymentId\": \"e390242e-91c7-de0d-d9f5-4d2297bc06df\"\n}"
						}
					]
				},
				{
					"name": "Consultar status do pagamento",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:8080/payments/:paymentId/status",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"payments",
								":paymentId",
								"status"
							],
							"variable": [
								{
									"key": "paymentId",
									"value": "e390242e-91c7-de0d-d9f5-4d2297bc06df",
									"description": "Identificador √∫nico da transa√ß√£o de pagamento gerada durante o processo de checkout"
								}
							]
						},
						"description": "**PASSO 9 - O Pagamento foi Aprovado?**\n\nO cliente aguarda a confirma√ß√£o e usa este endpoint para verificar rapidamente se o pagamento foi aprovado.\n\nEndpoint otimizado para verificar rapidamente o status de uma transa√ß√£o de pagamento. Retorna apenas o `paymentId` e o `status` atual.\n\n**Status poss√≠veis:**\n- PENDING: Pagamento pendente\n- APPROVED: Pagamento aprovado\n- DECLINED: Pagamento rejeitado\n- FAILED: Falha no processamento"
					},
					"response": [
						{
							"name": "Status do pagamento - Aprovado",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:8080/payments/e390242e-91c7-de0d-d9f5-4d2297bc06df/status",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"payments",
										"e390242e-91c7-de0d-d9f5-4d2297bc06df",
										"status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"paymentId\": \"e390242e-91c7-de0d-d9f5-4d2297bc06df\",\n  \"status\": \"APPROVED\"\n}"
						},
						{
							"name": "Status do pagamento - Pendente",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:8080/payments/e390242e-91c7-de0d-d9f5-4d2297bc06df/status",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"payments",
										"e390242e-91c7-de0d-d9f5-4d2297bc06df",
										"status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"paymentId\": \"e390242e-91c7-de0d-d9f5-4d2297bc06df\",\n  \"status\": \"PENDING\"\n}"
						}
					]
				},
				{
					"name": "Consultar dados do pagamento",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:8080/payments/:paymentId",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"payments",
								":paymentId"
							],
							"variable": [
								{
									"key": "paymentId",
									"value": "e390242e-91c7-de0d-d9f5-4d2297bc06df",
									"description": "Identificador √∫nico da transa√ß√£o de pagamento gerada durante o processo de checkout"
								}
							]
						},
						"description": "**PASSO 10 - Detalhes da Transa√ß√£o (Opcional)**\n\nPara obter mais detalhes sobre a transa√ß√£o (como valor, data e status), o cliente pode consultar este endpoint.\n\nRetorna os detalhes completos de uma transa√ß√£o de pagamento, incluindo status, valor e data de processamento. √ötil para verificar o resultado final de um pagamento."
					},
					"response": [
						{
							"name": "Dados completos do pagamento",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:8080/payments/e390242e-91c7-de0d-d9f5-4d2297bc06df",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"payments",
										"e390242e-91c7-de0d-d9f5-4d2297bc06df"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"orderId\": \"f5c245ab-4664-d67d-74d7-225526e5fa4f\",\n  \"paymentId\": \"e390242e-91c7-de0d-d9f5-4d2297bc06df\",\n  \"amount\": 57.80,\n  \"paymentStatus\": \"APPROVED\",\n  \"processedAt\": \"2024-01-15T14:30:25-03:00\"\n}"
						},
						{
							"name": "Pagamento n√£o encontrado",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:8080/payments/99999999-9999-9999-9999-999999999999",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"payments",
										"99999999-9999-9999-9999-999999999999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": 404,\n  \"message\": \"Entity not found\",\n  \"error\": [\n    \"Payment not found\"\n  ]\n}"
						}
					]
				}
			],
			"description": "**FLUXO DE PAGAMENTO**\n\nGerenciamento de pagamentos dos pedidos. Com o pedido criado, o pr√≥ximo passo √© o pagamento.\n\nPermite iniciar processamento de pagamento e consultar status das transa√ß√µes."
		},
		{
			"name": "4Ô∏è‚É£ Opera√ß√£o da Cozinha",
			"item": [
				{
					"name": "Listar pedidos ativos",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:8080/orders?page=0&size=10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"orders"
							],
							"query": [
								{
									"key": "page",
									"value": "0",
									"description": "N√∫mero da p√°gina (come√ßando em 0)"
								},
								{
									"key": "size",
									"value": "10",
									"description": "Tamanho da p√°gina (n√∫mero de itens por p√°gina)"
								}
							]
						},
						"description": "**PASSO 11 - Acompanhando a Fila da Cozinha**\n\nCom o pagamento confirmado, o pedido √© enviado para a cozinha. A equipe da cozinha monitora este endpoint para ver a lista de pedidos pendentes.\n\nRetorna uma lista paginada de pedidos que n√£o est√£o com status `DELIVERED`. A lista √© priorizada para garantir que os pedidos prontos sejam atendidos primeiro, seguidos pelos que est√£o em prepara√ß√£o e, por √∫ltimo, os rec√©m-chegados.\n\n**Ordena√ß√£o por prioridade:**\n- DONE > IN_PREPARATION > RECEIVED\n- Dentro de cada status: pedidos mais antigos primeiro\n- Pedidos com status DELIVERED n√£o aparecem na lista\n\n**Par√¢metros de pagina√ß√£o:**\n- page: N√∫mero da p√°gina (come√ßando em 0)\n- size: Quantidade de itens por p√°gina (padr√£o: 10)"
					},
					"response": [
						{
							"name": "Lista de pedidos ativos ordenados por prioridade",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:8080/orders?page=0&size=10",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"orders"
									],
									"query": [
										{
											"key": "page",
											"value": "0",
											"description": "N√∫mero da p√°gina (come√ßando em 0)"
										},
										{
											"key": "size",
											"value": "10",
											"description": "Tamanho da p√°gina (n√∫mero de itens por p√°gina)"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"OrderId\": \"f5c245ab-4664-d67d-74d7-225526e5fa4f\",\n    \"customerId\": \"61bc79b4-2854-15d3-688a-f98841eaa43b\",\n    \"items\": [\n      {\n        \"productId\": \"2f8c67c7-c2a3-c0d9-958a-ecd12f683323\",\n        \"name\": \"X-Burger Cl√°ssico\",\n        \"quantity\": 2,\n        \"price\": 25.90,\n        \"category\": \"SNACK\",\n        \"discount\": {\n          \"value\": 0.00\n        }\n      },\n      {\n        \"productId\": \"89398ec0-8238-cbab-fb94-b34c88066534\",\n        \"name\": \"Coca-Cola 350ml\",\n        \"quantity\": 2,\n        \"price\": 5.50,\n        \"category\": \"DRINK\",\n        \"discount\": {\n          \"value\": 0.00\n        }\n      }\n    ],\n    \"discountAmountTotal\": 0.00,\n    \"total\": 62.80,\n    \"status\": \"DONE\"\n  },\n  {\n    \"OrderId\": \"1c664f52-9918-f715-fab4-41f11d5593af\",\n    \"customerId\": \"b594a376-806d-6730-d322-22752f54a92c\",\n    \"items\": [\n      {\n        \"productId\": \"f2078dbd-fedf-d2cc-fc43-b17ec1e6daec\",\n        \"name\": \"X-Bacon Especial\",\n        \"quantity\": 1,\n        \"price\": 29.90,\n        \"category\": \"SNACK\",\n        \"discount\": {\n          \"value\": 2.00\n        }\n      }\n    ],\n    \"discountAmountTotal\": 2.00,\n    \"total\": 27.90,\n    \"status\": \"IN_PREPARATION\"\n  }\n]"
						}
					]
				}
			],
			"description": "**OPERA√á√ÉO DA COZINHA**\n\nCom o pagamento confirmado, o pedido √© enviado para a cozinha.\n\nGerenciamento da fila de produ√ß√£o e acompanhamento dos pedidos em prepara√ß√£o."
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080"
		}
	]
}